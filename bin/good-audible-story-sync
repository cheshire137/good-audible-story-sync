#!/usr/bin/env ruby
# encoding: utf-8

require_relative "../lib/good_audible_story_sync"

options = GoodAudibleStorySync::Options.parse(script_name: __FILE__)

audible_auth = GoodAudibleStorySync::Audible::AuthFlow.run(output_file: options.credentials_file)
if audible_auth.nil?
  exit 1
end

audible_client = GoodAudibleStorySync::Audible::Client.new(auth: audible_auth, options: options)

unless audible_auth.loaded_from_file?
  puts "Getting Audible user profile..."
  user_profile = audible_client.get_user_profile
  puts user_profile.to_s(indent_level: 1)
end

library_file = options.library_file
if File.exist?(library_file)
  puts "Loading Audible library from file #{library_file}..."
  library = GoodAudibleStorySync::Audible::Library.load_from_file(library_file)
else
  puts "Fetching Audible library from API..."
  library = audible_client.get_all_library_pages

  puts "Saving Audible library data to file #{library_file}..."
  library.save_to_file(library_file)
end

total_items = library.total_items
library_item_units = total_items == 1 ? "book" : "books"
puts "Loaded #{total_items} #{library_item_units} from Audible library"

unless library.any_finished_time_loaded?
  finish_times_by_asin = audible_client.get_finish_times_by_asin
  library.populate_finish_times(finish_times_by_asin)

  if library.total_finished < 1
    puts "No books in Audible library have been finished"
    exit 0
  end

  puts "Loaded finished status for #{library.total_finished} #{library.finished_item_units} from " \
    "Audible library"

  puts "Saving Audible library data to file #{library_file}..."
  library.save_to_file(library_file)
end

puts "#{library.total_finished} #{library.finished_item_units} in Audible library have been finished:"
library.finished_items.each do |library_item|
  puts library_item.to_s(indent_level: 1)
end

if library.total_unfinished < 1
  puts "All books in Audible library have been finished!"
else
  puts "#{library.total_unfinished} #{library.unfinished_item_units} in Audible library have " \
    "not been finished"
end
