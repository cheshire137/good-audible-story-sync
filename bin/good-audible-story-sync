#!/usr/bin/env ruby
# encoding: utf-8

require_relative "../lib/good_audible_story_sync"

options = GoodAudibleStorySync::Options.parse(script_name: __FILE__)

audible_auth = GoodAudibleStorySync::Audible::AuthFlow.run(credentials_file: options.credentials_file)
if audible_auth.nil?
  exit 1
end

audible_client = GoodAudibleStorySync::Audible::Client.new(auth: audible_auth, options: options)

unless audible_auth.loaded_from_file?
  puts "#{GoodAudibleStorySync::Util::INFO_EMOJI} Getting Audible user profile..."
  user_profile = audible_client.get_user_profile
  puts user_profile.to_s(indent_level: 1)
end

library_file = options.library_file
if File.exist?(library_file)
  puts "#{GoodAudibleStorySync::Util::INFO_EMOJI} Loading Audible library from file #{library_file}..."
  library = GoodAudibleStorySync::Audible::Library.load_from_file(library_file)
else
  puts "#{GoodAudibleStorySync::Util::INFO_EMOJI} Fetching Audible library from API..."
  library = audible_client.get_all_library_pages

  puts "#{GoodAudibleStorySync::Util::SAVE_EMOJI} Saving Audible library data to " \
    "file #{library_file}..."
  library.save_to_file(library_file)
end

unless library.any_finished_time_loaded?
  finish_times_by_asin = audible_client.get_finish_times_by_asin
  library.populate_finish_times(finish_times_by_asin)

  if library.total_finished < 1
    puts "#{GoodAudibleStorySync::Util::INFO_EMOJI} No books in Audible library have been finished"
    exit 0
  end

  puts "Loaded finished status for #{library.total_finished} #{library.finished_item_units} from " \
    "Audible library"

  puts "#{GoodAudibleStorySync::Util::SAVE_EMOJI} Saving Audible library data to file #{library_file}..."
  library.save_to_file(library_file)
end

puts library.to_s

puts "\n#{GoodAudibleStorySync::Util::INFO_EMOJI} Logging in to Storygraph..."
storygraph_auth = GoodAudibleStorySync::Storygraph::AuthFlow.run(
  credentials_file: options.credentials_file
)
exit 1 unless storygraph_auth

library_item = library.items.detect { |item| item.search_query }
if library_item
  storygraph_client = GoodAudibleStorySync::Storygraph::Client.new(auth: storygraph_auth)
  storygraph_books = storygraph_client.search(library_item.search_query)
  storygraph_books.each do |book|
    puts book.to_s(indent_level: 1)
  end
end
