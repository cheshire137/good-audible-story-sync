#!/usr/bin/env ruby
# encoding: utf-8

require_relative "../lib/good_audible_story_sync"

cipher = GoodAudibleStorySync::Util::Cipher.new
options = GoodAudibleStorySync::Options.parse(script_name: __FILE__, cipher: cipher)
db_client = GoodAudibleStorySync::Database::Client.new(db_file: options.database_file, cipher: cipher)
db_client.create_tables

audible_auth = GoodAudibleStorySync::Audible::AuthFlow.run(db_client: db_client)
exit 1 if audible_auth.nil?

audible_client = GoodAudibleStorySync::Audible::Client.new(auth: audible_auth, options: options,
  credentials_db: db_client.credentials)

unless audible_auth.loaded_from_database?
  puts "#{GoodAudibleStorySync::Util::INFO_EMOJI} Getting Audible user profile..."
  user_profile = audible_client.get_user_profile
  puts user_profile.to_s(indent_level: 1)
end

library = GoodAudibleStorySync::Audible::Library.load_with_finish_times(client: audible_client,
  options: options)
puts library.to_s

puts "\n#{GoodAudibleStorySync::Util::INFO_EMOJI} Logging in to Storygraph..."
storygraph_auth = GoodAudibleStorySync::Storygraph::AuthFlow.run(db_client: db_client)
exit 1 unless storygraph_auth

storygraph_client = GoodAudibleStorySync::Storygraph::Client.new(auth: storygraph_auth)
storygraph_library = storygraph_client.get_read_books
puts "Found #{storygraph_library.total_books} read #{storygraph_library.book_units} on Storygraph"
storygraph_library.save_to_file(options.storygraph_file)
